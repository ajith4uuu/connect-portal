# Cloud Build configuration for deploying BCC Portal to Cloud Run
# This file automates the build and deployment process

substitutions:
  _SERVICE_NAME: bcc-portal-backend
  _REGION: us-central1
  _GCS_BUCKET: bcc-documentai-pdfs
  _BQ_DATASET: bcc_portal

steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$COMMIT_SHA', './backend']
    
  # Step 2: Push the Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$COMMIT_SHA']
    
  # Step 3: Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image'
      - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$COMMIT_SHA'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--cpu'
      - '2'
      - '--memory'
      - '2Gi'
      - '--max-instances'
      - '100'
      - '--min-instances'
      - '1'
      - '--port'
      - '8080'
      - '--timeout'
      - '300'
      - '--set-env-vars'
      - 'GCP_PROJECT_ID=$PROJECT_ID'
      - '--set-env-vars'
      - 'GCS_BUCKET=${_GCS_BUCKET}'
      - '--set-env-vars'
      - 'BQ_DATASET_ID=${_BQ_DATASET}'
      - '--set-env-vars'
      - 'BQ_TABLE_ID=survey_responses'
      - '--set-env-vars'
      - 'DOCAI_LOCATION=us'
      - '--set-secrets'
      - 'DOCAI_PROCESSOR_ID=docai-processor-id:latest'
      - '--set-secrets'
      - 'EMAIL_USER=email-user:latest'
      - '--set-secrets'
      - 'EMAIL_APP_PASSWORD=email-app-password:latest'
      - '--set-secrets'
      - 'GEMINI_API_KEY=gemini-api-key:latest'
      - '--service-account'
      - 'bcc-portal-sa@$PROJECT_ID.iam.gserviceaccount.com'

  # Step 4: Create BigQuery dataset if it doesn't exist
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        bq mk -f --location=US --dataset $PROJECT_ID:${_BQ_DATASET} || true

  # Step 5: Create GCS bucket if it doesn't exist
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gsutil mb -p $PROJECT_ID -l us-central1 gs://${_GCS_BUCKET} || true

images:
  - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$COMMIT_SHA'

timeout: '1200s'
